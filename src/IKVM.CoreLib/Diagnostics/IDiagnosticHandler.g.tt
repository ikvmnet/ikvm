<#@ template debug="false" hostspecific="true" language="C#" compilerOptions="/unsafe" #>
<#@ include file="Diagnostic.t4" #>
<#@ assembly name="System.CodeDom" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Memory" #>
<#@ assembly name="System.Buffers" #>
<#@ assembly name="Newtonsoft.Json" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Buffers" #>
<#@ import namespace="System.CodeDom" #>
<#@ import namespace="System.CodeDom.Compiler" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Runtime.CompilerServices" #>
<#@ import namespace="System.Runtime.InteropServices" #>
<#@ import namespace="Newtonsoft.Json" #>
<#@ import namespace="Newtonsoft.Json.Linq" #>
<#@ output extension=".cs" #>
#nullable enable

namespace IKVM.CoreLib.Diagnostics
{

    partial interface IDiagnosticHandler
    {

<#
foreach (var kvp in DiagnosticFile.Read(Host.ResolvePath(Path.Combine("Diagnostic.json"))))
{
    var desc = kvp.Value.Description;
    if (string.IsNullOrWhiteSpace(desc))
        desc = $"The '{kvp.Key}' diagnostic.";

    var argList = new List<string>();
    for (int i = 0; i < kvp.Value.Args.Count; i++)
        argList.Add($"{kvp.Value.Args[i].Type} {kvp.Value.Args[i].Name}");
#>
        /// <summary>
        /// <#= desc #>
        /// </summary>
        /// <remarks>
<#= Util.ToCommentString(kvp.Value) #>
        /// </remarks>
        void <#= kvp.Key #>(<#= string.Join(", ", argList) #>);

<#
}
#>
    }

}
