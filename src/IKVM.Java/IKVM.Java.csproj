<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFrameworks>net472;net6.0</TargetFrameworks>
        <ProduceReferenceAssembly>false</ProduceReferenceAssembly>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.NETCore.Platforms" Version="8.0.0-preview.7.23375.6" GeneratePathProperty="true" />
        <PackageReference Include="System.Collections.Immutable" Version="7.0.0" PrivateAssets="all" GeneratePathProperty="true" />
        <PackageReference Include="System.Reflection.Metadata" Version="7.0.2" PrivateAssets="all" GeneratePathProperty="true" />
    </ItemGroup>

    <ItemGroup>
        <Reference Include="IKVM.Java" HintPath="ref\$(TargetFramework)\IKVM.Java.dll" Private="false" HideFromJava="true" Condition=" '$(TargetFramework)' != '' " />
    </ItemGroup>

    <ItemGroup>
        <EmbeddedResource Include="$(PkgMicrosoft_NETCore_Platforms)\runtime.json" LogicalName="runtime.json" Link="runtime.json" />
        <None Remove="**\*" />
    </ItemGroup>

    <PropertyGroup>
        <___IkvmTaskGenerateTypeForwards>
            <![CDATA[
using System;
using System.IO;
using System.Text;
using System.Reflection.Metadata;
using System.Reflection.PortableExecutable;

using Microsoft.Build.Framework;
using Microsoft.Build.Utilities;

public class IkvmTaskGenerateTypeForwards : Task
{

    static readonly char[] INVALID = new char[] { '<', '>', '$', '-' };

    [Required]
    public string AssemblyFile { get; set; }
    
    [Required]
    public string GenerateFile { get; set; }
    
    bool AppendTypeName(MetadataReader mrdr, StringBuilder b, TypeDefinitionHandle h)
    {
        var td = mrdr.GetTypeDefinition(h);
        var ns = mrdr.GetString(td.Namespace) ?? "";
        var tn = mrdr.GetString(td.Name) ?? "";
            
        if (ns.IndexOfAny(INVALID) > -1 || tn.IndexOfAny(INVALID) > -1 || char.IsNumber(tn[0]))
            return false;
            
        if (td.IsNested == false)
        {
            if (ns != "")
                foreach (var s in ns.Split('.'))
                    b.Append("@").Append(s).Append(".");

            b.Append("@").Append(tn);
            return true;
        }
        else
        {
            if (AppendTypeName(mrdr, b, td.GetDeclaringType()) == false)
                return false;
                
            b.Append(".");
            b.Append("@").Append(tn);
            return true;
        }
    }
    
    public override bool Execute()
    {
        using var fsstm = new FileStream(AssemblyFile, FileMode.Open, FileAccess.Read, FileShare.Read);
        using var perdr = new PEReader(fsstm);
        var mrdr = perdr.GetMetadataReader();
        
        using var gsstm = File.Create(GenerateFile);
        using var gswrt = new StreamWriter(gsstm);
        
        foreach (var h in mrdr.TypeDefinitions)
        {
            var b = new StringBuilder();
            if (AppendTypeName(mrdr, b, h))
                gswrt.WriteLine($@"[assembly: global::System.Runtime.CompilerServices.TypeForwardedTo(typeof(global::{b}))]");
        }
        
        return true;
    }

}
        
            ]]>
        </___IkvmTaskGenerateTypeForwards>
    </PropertyGroup>

    <UsingTask TaskName="IkvmTaskGenerateTypeForwards" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll" Condition=" '$(MSBuildRuntimeType)' == 'Core' ">
        <Task>
            <Reference Include="$(PkgSystem_Collections_Immutable)\lib\net6.0\System.Collections.Immutable.dll" />
            <Reference Include="$(PkgSystem_Reflection_Metadata)\lib\netstandard2.0\System.Reflection.Metadata.dll" />
            <Code Type="Class" Language="cs">
                <![CDATA[
#define NETCOREAPP
$([MSBuild]::Unescape('$(___IkvmTaskGenerateTypeForwards)'))
            ]]>
            </Code>
        </Task>
    </UsingTask>

    <UsingTask TaskName="IkvmTaskGenerateTypeForwards" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll" Condition=" '$(MSBuildRuntimeType)' != 'Core' ">
        <Task>
            <Reference Include="$(PkgSystem_Collections_Immutable)\lib\net462\System.Collections.Immutable.dll" />
            <Reference Include="$(PkgSystem_Reflection_Metadata)\lib\net462\System.Reflection.Metadata.dll" />
            <Code Type="Class" Language="cs">
                <![CDATA[
#define NETFRAMEWORK
$([MSBuild]::Unescape('$(___IkvmTaskGenerateTypeForwards)'))
            ]]>
            </Code>
        </Task>
    </UsingTask>

    <Target Name="GenerateTypeForwards" BeforeTargets="CoreCompile" Inputs="..\IKVM.Java.Private\ref\$(TargetFramework)\IKVM.Java.Private.dll" Outputs="$(IntermediateOutputPath)GenerateTypeForwards.g.cs" Condition=" '$(TargetFramework)' != '' ">
        <IkvmTaskGenerateTypeForwards AssemblyFile="..\IKVM.Java.Private\ref\$(TargetFramework)\IKVM.Java.Private.dll" GenerateFile="$(IntermediateOutputPath)GenerateTypeForwards.g.cs" />
        <ItemGroup>
            <Compile Include="$(IntermediateOutputPath)GenerateTypeForwards.g.cs" />
        </ItemGroup>
    </Target>

    <Import Project="$(MSBuildThisFileDirectory)..\..\IKVM.deps.targets" />
</Project>
