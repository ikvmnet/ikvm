<Project>
    <PropertyGroup>
        <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
    </PropertyGroup>

    <!-- 
    
        ClangProjectReference
        
        These references point to Clang projects and have their produced libraries added to the project output.
        
    -->

    <Target Name="AssignClangProjectConfiguration" Condition=" '$(DesignTimeBuild)' != 'true' And '@(ClangProjectReference)' != '' ">
        <ItemGroup>
            <_ClangProjectReference Include="@(ClangProjectReference)" />
        </ItemGroup>
        <PropertyGroup>
            <OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration Condition="'$(OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration)' == ''">true</OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration>
            <ShouldUnsetParentConfigurationAndPlatform Condition="'$(ShouldUnsetParentConfigurationAndPlatform)' == '' and ('$(BuildingInsideVisualStudio)' == 'true' or '$(BuildingSolutionFile)' == 'true')">true</ShouldUnsetParentConfigurationAndPlatform>
            <ShouldUnsetParentConfigurationAndPlatform Condition="'$(ShouldUnsetParentConfigurationAndPlatform)' == ''">false</ShouldUnsetParentConfigurationAndPlatform>
        </PropertyGroup>
        <AssignProjectConfiguration ProjectReferences="@(_ClangProjectReference)" CurrentProject="$(MSBuildProjectFullPath)" CurrentProjectConfiguration="$(Configuration)" CurrentProjectPlatform="$(Platform)" DefaultToVcxPlatformMapping="$(DefaultToVcxPlatformMapping)" VcxToDefaultPlatformMapping="$(VcxToDefaultPlatformMapping)" OutputType="$(OutputType)" ResolveConfigurationPlatformUsingMappings="true" SolutionConfigurationContents="$(CurrentSolutionConfigurationContents)" AddSyntheticProjectReferencesForSolutionDependencies="false" OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration="$(OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration)" ShouldUnsetParentConfigurationAndPlatform="$(ShouldUnsetParentConfigurationAndPlatform)">
            <Output TaskParameter="AssignedProjects" ItemName="__ClangProjectReferenceWithConfiguration"/>
            <Output TaskParameter="UnassignedProjects" ItemName="__ClangProjectReferenceWithConfiguration"/>
        </AssignProjectConfiguration>
        <ItemGroup>
            <_ClangProjectReferenceWithConfiguration Remove="@(_ClangProjectReferenceWithConfiguration)" />
            <_ClangProjectReferenceWithConfiguration Include="@(__ClangProjectReferenceWithConfiguration)" />
        </ItemGroup>
    </Target>

    <Target Name="_GetClangProjectReferences" DependsOnTargets="AssignClangProjectConfiguration" Condition=" '@(_ClangProjectReferenceWithConfiguration)' != '' ">
        <ItemGroup>
            <__ClangProjectReference Remove="@(__ClangProjectReference)" />
            <__ClangProjectReference Include="@(_ClangProjectReferenceWithConfiguration)">
                <ProjectName>$([System.IO.Path]::GetFileNameWithoutExtension('%(Identity)'))</ProjectName>
            </__ClangProjectReference>
        </ItemGroup>
    </Target>

    <PropertyGroup>
        <GetClangProjectReferencesDependsOn>
            $(GetClangProjectReferencesDependsOn);
            AssignClangProjectConfiguration;
            _GetClangProjectReferences;
        </GetClangProjectReferencesDependsOn>
    </PropertyGroup>

    <Target Name="GetClangProjectReferences" DependsOnTargets="$(GetClangProjectReferencesDependsOn)">

    </Target>

    <Target Name="GetClangProjectReferenceItems" DependsOnTargets="GetClangProjectReferences" Condition=" '$(DesignTimeBuild)' != 'true' And '@(__ClangProjectReference)' != '' ">
        <ItemGroup>
            <_ClangProjectReferencesToTarget Remove="@(_ClangProjectReferencesToTarget)" />
            <_ClangProjectReferencesToTarget Include="@(__ClangProjectReference)">
                <Properties>%(__ClangProjectReference.SetConfiguration);%(__ClangProjectReference.SetPlatform);TargetIdentifier=%(__ClangProjectReference.RuntimeIdentifier)</Properties>
            </_ClangProjectReferencesToTarget>
        </ItemGroup>
        <MSBuild Projects="@(_ClangProjectReferencesToTarget)" Targets="Build" BuildInParallel="$(BuildInParallel)" RemoveProperties="$(_GlobalPropertiesToRemoveFromProjectReferences);TargetFramework;RuntimeIdentifier" />
        <MSBuild Projects="@(_ClangProjectReferencesToTarget)" Targets="GetClangTargetItem" BuildInParallel="$(BuildInParallel)" RemoveProperties="$(_GlobalPropertiesToRemoveFromProjectReferences);TargetFramework;RuntimeIdentifier" RebaseOutputs="true">
            <Output TaskParameter="TargetOutputs" ItemName="_ResolvedClangProjectReferenceTargetOutput" />
        </MSBuild>
        <ItemGroup>
            <_ClangProjectReferenceItems Include="@(_ResolvedClangProjectReferenceTargetOutput)" />
        </ItemGroup>
    </Target>

    <Target Name="GetClangProjectReferenceOutputItems" DependsOnTargets="GetClangProjectReferenceItems" Condition=" '$(DesignTimeBuild)' != 'true' And '@(_ClangProjectReferenceItems)' != '' ">
        <PropertyGroup>
            <_CompatibleRuntimeIdentifiers Condition=" '$(RuntimeIdentifier)' == '' And '$(RuntimeIdentifiers)' == '' ">;any;</_CompatibleRuntimeIdentifiers>
            <_CompatibleRuntimeIdentifiers Condition=" '$(RuntimeIdentifier)' == '' And '$(RuntimeIdentifiers)' != '' ">;$(RuntimeIdentifiers);</_CompatibleRuntimeIdentifiers>
            <_CompatibleRuntimeIdentifiers Condition=" '$(RuntimeIdentifier)' != '' ">;$(RuntimeIdentifier);</_CompatibleRuntimeIdentifiers>
            <_CompatibleRuntimeIdentifiers Condition="$(_CompatibleRuntimeIdentifiers.Contains(';win-x86;')) And '$(Prefer32Bit)' == 'false' ">;$(_CompatibleRuntimeIdentifiers);win-x64;</_CompatibleRuntimeIdentifiers>
            <_CompatibleRuntimeIdentifiers Condition="$(_CompatibleRuntimeIdentifiers.Contains(';win7-x86;')) And '$(Prefer32Bit)' == 'false' ">;$(_CompatibleRuntimeIdentifiers);win7-x64;</_CompatibleRuntimeIdentifiers>
            <_CompatibleRuntimeIdentifiers Condition="$(_CompatibleRuntimeIdentifiers.Contains(';win8-x86;')) And '$(Prefer32Bit)' == 'false' ">;$(_CompatibleRuntimeIdentifiers);win8-x64;</_CompatibleRuntimeIdentifiers>
            <_CompatibleRuntimeIdentifiers Condition="$(_CompatibleRuntimeIdentifiers.Contains(';win10-x86;')) And '$(Prefer32Bit)' == 'false' ">;$(_CompatibleRuntimeIdentifiers);win10-x64;</_CompatibleRuntimeIdentifiers>
        </PropertyGroup>
        <MatchCompatibleRuntimeIdentifierItems TargetRuntimeIdentifiers="$(_CompatibleRuntimeIdentifiers)" GroupKeyMetadataName="TargetName" RuntimeIdentifierMetadataName="TargetIdentifier" Items="@(_ClangProjectReferenceItems)">
            <Output TaskParameter="Items" ItemName="__ClangProjectReferenceItems" />
        </MatchCompatibleRuntimeIdentifierItems>
        <ItemGroup>
            <None Include="@(__ClangProjectReferenceItems)" Condition=" '%(__ClangProjectReferenceItems._Compatible)' == 'true' ">
                <TargetPath>runtimes\%(__ClangProjectReferenceItems.TargetIdentifier)\native\%(__ClangProjectReferenceItems.Filename)%(__ClangProjectReferenceItems.Extension)</TargetPath>
                <TargetPath Condition=" '%(__ClangProjectReferenceItems._ManyCompatible)' != 'true' ">%(__ClangProjectReferenceItems.Filename)%(__ClangProjectReferenceItems.Extension)</TargetPath>
                <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
                <PackagePath>runtimes\%(__ClangProjectReferenceItems.TargetIdentifier)\native\%(__ClangProjectReferenceItems.Filename)%(__ClangProjectReferenceItems.Extension)</PackagePath>
                <Pack Condition=" '%(__ClangProjectReferenceItems.Pack)' == '' ">true</Pack>
            </None>
            <None Include="@(__ClangProjectReferenceItems->'%(RelativeDir)%(Filename).pdb')" Condition=" '%(__ClangProjectReferenceItems._Compatible)' == 'true' And Exists('%(__ClangProjectReferenceItems.RelativeDir)%(__ClangProjectReferenceItems.Filename).pdb') ">
                <TargetPath>runtimes\%(__ClangProjectReferenceItems.TargetIdentifier)\native\%(__ClangProjectReferenceItems.Filename).pdb</TargetPath>
                <TargetPath Condition=" '%(__ClangProjectReferenceItems._ManyCompatible)' != 'true' ">%(__ClangProjectReferenceItems.Filename).pdb</TargetPath>
                <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
                <PackagePath>runtimes\%(__ClangProjectReferenceItems.TargetIdentifier)\native\%(__ClangProjectReferenceItems.Filename).pdb</PackagePath>
                <Pack Condition=" '%(__ClangProjectReferenceItems.Pack)' == '' ">true</Pack>
            </None>
        </ItemGroup>
    </Target>

    <Target Name="GetClangProjectReferenceItemsForPack" BeforeTargets="_GetPackageFiles" DependsOnTargets="$(GetClangProjectReferenceItemsForPackDependsOn)" Condition=" '$(DesignTimeBuild)' != 'true' ">
        
    </Target>

    <PropertyGroup>
        <GetClangProjectReferenceItemsForPackDependsOn>
            $(GetClangProjectReferenceItemsForPackDependsOn);
            GetClangProjectReferences;
            GetClangProjectReferenceItems;
            GetClangProjectReferenceOutputItems;
        </GetClangProjectReferenceItemsForPackDependsOn>
    </PropertyGroup>
    
     <PropertyGroup>
        <AssignTargetPathsDependsOn>
            GetClangProjectReferences;
            GetClangProjectReferenceItems;
            GetClangProjectReferenceOutputItems;
            $(AssignTargetPathsDependsOn);
        </AssignTargetPathsDependsOn>
    </PropertyGroup>

    <Target Name="ResolveClangAdditionalRuntimeAssets" DependsOnTargets="GetClangProjectReferenceItems" BeforeTargets="GenerateBuildDependencyFileExtensions">
        <ItemGroup>
            <AdditionalRuntimeNativeAssets Include="@(_ClangProjectReferenceItems)" Condition=" '%(_ClangProjectReferenceItems.TargetIdentifier)' != '' ">
                <LibraryName>%(_ClangProjectReferenceItems.TargetName)</LibraryName>
                <LibraryVersion>%(_ClangProjectReferenceItems.Version)</LibraryVersion>
                <LibraryType>project</LibraryType>
                <AssetPath>runtimes\%(TargetIdentifier)\native\%(Filename)%(Extension)</AssetPath>
                <Runtime>%(_ClangProjectReferenceItems.TargetIdentifier)</Runtime>
            </AdditionalRuntimeNativeAssets>
        </ItemGroup>
    </Target>

</Project>
